{"ast":null,"code":"var _jsxFileName = \"/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchView = props => {\n  const Options = () => {\n    let suggestions = [];\n    let data = [\"Greg\", \"ImposterGreg\", \"Max\", \"Sonzi\", \"Jack\"];\n\n    for (let i = 0; i < data.length; i++) {\n      suggestions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: data[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 26\n      }, this));\n    }\n\n    return suggestions;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"select\",\n    onChange: this.onDropdownSelected,\n    label: \"Multiple Select\",\n    multiple: true,\n    children: this.createSelectItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_c = SearchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchView\");","map":{"version":3,"sources":["/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js"],"names":["SearchView","props","Options","suggestions","data","i","length","push","onDropdownSelected","createSelectItems"],"mappings":";;AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAD,IAAW;AAIjC,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,IAAI,GAAG,CAAC,MAAD,EAAS,cAAT,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,MAAzC,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCF,MAAAA,WAAW,CAACI,IAAZ,eAAiB;AAAQ,QAAA,KAAK,EAAEH,IAAI,CAACC,CAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAjB;AACD;;AACD,WAAOF,WAAP;AACD,GAPD;;AASA,sBACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,QAAQ,EAAE,KAAKK,kBAApC;AAAwD,IAAA,KAAK,EAAC,iBAA9D;AAAgF,IAAA,QAAQ,MAAxF;AAAA,cACM,KAAKC,iBAAL;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CAlBM;KAAMT,U","sourcesContent":["export const SearchView = (props) => {\n\n\n\n    const Options = () => {\n      let suggestions = [];\n      let data = [\"Greg\", \"ImposterGreg\", \"Max\", \"Sonzi\", \"Jack\"]\n      for (let i = 0; i < data.length; i++){\n        suggestions.push(<option value={data[i]}/>)\n      }\n      return suggestions;\n    }\n\n    return(\n      <input type=\"select\" onChange={this.onDropdownSelected} label=\"Multiple Select\" multiple>\n           {this.createSelectItems()}\n      </input>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}