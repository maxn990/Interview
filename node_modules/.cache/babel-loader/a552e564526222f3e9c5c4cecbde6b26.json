{"ast":null,"code":"var _jsxFileName = \"/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js\",\n    _s = $RefreshSig$();\n\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, onValue, get, child } from \"firebase/database\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchView = props => {\n  _s();\n\n  // create a variable for the data + a setter\n  const [userOptions, setUserOptions] = useState(() => []); // firebase config\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAQ6USPFRL3Uqps1aqErhcNyRlO2XblHj0\",\n    authDomain: \"interview-50399.firebaseapp.com\",\n    projectId: \"interview-50399\",\n    storageBucket: \"interview-50399.appspot.com\",\n    messagingSenderId: \"503019432099\",\n    appId: \"1:503019432099:web:9394f58478b734996db716\",\n    measurementId: \"G-C8XFN5VGFS\"\n  };\n  const app = initializeApp(firebaseConfig);\n  const database = getDatabase(); // get the data before the app loads\n\n  useEffect(() => {\n    const dbRef = ref(getDatabase());\n    get(child(dbRef, '/')).then(snapshot => {\n      const data = snapshot.val();\n      const list = [];\n\n      for (let id in data) {\n        list.push(data[id]);\n      }\n\n      let options = [];\n\n      for (let i = 0; i < list.length; i++) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: list[i]['First'],\n          children: list[i]['First']\n        }, list[i]['First'], false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this));\n      }\n\n      setUserOptions(options);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: \"users\",\n      name: \"userSearch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"users\",\n      children: userOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchView, \"F0Ql1DtytF4l5Gg/JZ3iNm6CxDY=\");\n\n_c = SearchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchView\");","map":{"version":3,"sources":["/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js"],"names":["initializeApp","getAnalytics","getDatabase","ref","onValue","get","child","React","useEffect","useState","SearchView","props","userOptions","setUserOptions","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","database","dbRef","then","snapshot","data","val","list","id","push","options","i","length","catch","error","console"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,EAAoCC,GAApC,EAAyCC,KAAzC,QAAqD,mBAArD;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAGA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACnC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,MAAM,EAAP,CAA9C,CAFmC,CAInC;;AACA,QAAMK,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,yCADa;AAErBC,IAAAA,UAAU,EAAE,iCAFS;AAGrBC,IAAAA,SAAS,EAAE,iBAHU;AAIrBC,IAAAA,aAAa,EAAE,6BAJM;AAKrBC,IAAAA,iBAAiB,EAAE,cALE;AAMrBC,IAAAA,KAAK,EAAE,2CANc;AAOrBC,IAAAA,aAAa,EAAE;AAPM,GAAvB;AASA,QAAMC,GAAG,GAAGtB,aAAa,CAACc,cAAD,CAAzB;AACA,QAAMS,QAAQ,GAAGrB,WAAW,EAA5B,CAfmC,CAiBnC;;AACAM,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAGrB,GAAG,CAACD,WAAW,EAAZ,CAAjB;AACAG,IAAAA,GAAG,CAACC,KAAK,CAACkB,KAAD,EAAQ,GAAR,CAAN,CAAH,CAAuBC,IAAvB,CAA6BC,QAAD,IAAc;AACxC,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACA,YAAMC,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,EAAT,IAAeH,IAAf,EAAoB;AAClBE,QAAAA,IAAI,CAACE,IAAL,CAAUJ,IAAI,CAACG,EAAD,CAAd;AACD;;AACD,UAAIE,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCD,QAAAA,OAAO,CAACD,IAAR,eAAa;AAA+B,UAAA,KAAK,EAAEF,IAAI,CAACI,CAAD,CAAJ,CAAQ,OAAR,CAAtC;AAAA,oBAAyDJ,IAAI,CAACI,CAAD,CAAJ,CAAQ,OAAR;AAAzD,WAAaJ,IAAI,CAACI,CAAD,CAAJ,CAAQ,OAAR,CAAb;AAAA;AAAA;AAAA;AAAA,gBAAb;AACD;;AACDpB,MAAAA,cAAc,CAACmB,OAAD,CAAd;AACD,KAXD,EAWGG,KAXH,CAWUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAbD;AAcD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA,gBACGxB;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA5CM;;GAAMF,U;;KAAAA,U","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, onValue, get, child} from \"firebase/database\";\nimport React, {useEffect, useState} from 'react';\n\n\nexport const SearchView = (props) => {\n  // create a variable for the data + a setter\n  const [userOptions, setUserOptions] = useState(() => [])\n\n  // firebase config\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAQ6USPFRL3Uqps1aqErhcNyRlO2XblHj0\",\n    authDomain: \"interview-50399.firebaseapp.com\",\n    projectId: \"interview-50399\",\n    storageBucket: \"interview-50399.appspot.com\",\n    messagingSenderId: \"503019432099\",\n    appId: \"1:503019432099:web:9394f58478b734996db716\",\n    measurementId: \"G-C8XFN5VGFS\"\n  };\n  const app = initializeApp(firebaseConfig);\n  const database = getDatabase();\n\n  // get the data before the app loads\n  useEffect(() => {\n    const dbRef = ref(getDatabase());\n    get(child(dbRef, '/')).then((snapshot) => {\n      const data = snapshot.val()\n      const list = []\n      for (let id in data){\n        list.push(data[id])\n      }\n      let options = []\n      for (let i = 0; i < list.length; i++){\n        options.push(<option key={list[i]['First']} value={list[i]['First']}>{list[i]['First']}</option>)\n      }\n      setUserOptions(options)\n    }).catch((error) => {\n      console.error(error);\n    });\n  }, [])\n\n  return (\n    <div>\n      <input list=\"users\" name=\"userSearch\"/>\n      <datalist id=\"users\">\n        {userOptions}\n      </datalist>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}