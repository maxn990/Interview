{"ast":null,"code":"var _jsxFileName = \"/Users/maxnorman/Documents/Coding/Interview/interview/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { SearchView } from './search.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const dbRef = ref(getDatabase());\n  get(child(dbRef, '/')).then(snapshot => {\n    if (snapshot.exists()) {\n      for (let i = 0; i < snapshot.val().length; i++) {\n        // console.log(snapshot.val()[i])\n        data.push(snapshot.val()[i]);\n      }\n    } else {\n      console.log(\"No data available\");\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(SearchView, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maxnorman/Documents/Coding/Interview/interview/src/App.js"],"names":["logo","SearchView","App","dbRef","ref","getDatabase","get","child","then","snapshot","exists","i","val","length","data","push","console","log","catch","error"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAAQC,UAAR,QAAyB,aAAzB;;;AAEA,SAASC,GAAT,GAAe;AAGb,QAAMC,KAAK,GAAGC,GAAG,CAACC,WAAW,EAAZ,CAAjB;AACAC,EAAAA,GAAG,CAACC,KAAK,CAACJ,KAAD,EAAQ,GAAR,CAAN,CAAH,CAAuBK,IAAvB,CAA6BC,QAAD,IAAc;AACxC,QAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,GAAT,GAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAA+C;AAC7C;AACAG,QAAAA,IAAI,CAACC,IAAL,CAAUN,QAAQ,CAACG,GAAT,GAAeD,CAAf,CAAV;AACD;AACF,KALD,MAKO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,GATD,EASGC,KATH,CASUC,KAAD,IAAW;AAClBH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,GAXD;AAYAH,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAlBQZ,G;AAoBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {SearchView} from './search.js'\n\nfunction App() {\n\n\n  const dbRef = ref(getDatabase());\n  get(child(dbRef, '/')).then((snapshot) => {\n    if (snapshot.exists()) {\n      for (let i = 0; i < snapshot.val().length; i++){\n        // console.log(snapshot.val()[i])\n        data.push(snapshot.val()[i]);\n      }\n    } else {\n      console.log(\"No data available\");\n    }\n  }).catch((error) => {\n    console.error(error);\n  });\n  console.log(data)\n  return <SearchView data={data}/>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}