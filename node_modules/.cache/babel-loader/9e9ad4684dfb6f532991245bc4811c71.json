{"ast":null,"code":"var _jsxFileName = \"/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchView = props => {\n  let options = [];\n\n  for (let i = 0; i < props.data.length; i++) {\n    options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: props.data[i],\n      children: props.data[i]\n    }, props.data[i], false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 18\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: \"users\",\n      name: \"userSearch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"users\",\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = SearchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchView\");","map":{"version":3,"sources":["/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js"],"names":["SearchView","props","options","i","data","length","push"],"mappings":";;AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAD,IAAW;AAEnC,MAAIC,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA2C;AACzCD,IAAAA,OAAO,CAACI,IAAR,eAAa;AAA4B,MAAA,KAAK,EAAEL,KAAK,CAACG,IAAN,CAAWD,CAAX,CAAnC;AAAA,gBAAmDF,KAAK,CAACG,IAAN,CAAWD,CAAX;AAAnD,OAAaF,KAAK,CAACG,IAAN,CAAWD,CAAX,CAAb;AAAA;AAAA;AAAA;AAAA,YAAb;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBM;KAAMF,U","sourcesContent":["export const SearchView = (props) => {\n\n  let options = []\n\n  for (let i = 0; i < props.data.length; i++){\n    options.push(<option key={props.data[i]} value={props.data[i]}>{props.data[i]}</option>)\n  }\n\n  return (\n    <div>\n      <input list=\"users\" name=\"userSearch\"/>\n      <datalist id=\"users\">\n        {options}\n      </datalist>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}