{"ast":null,"code":"var _jsxFileName = \"/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js\";\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchView = props => {\n  const app = initializeApp(firebaseConfig);\n  let data = null;\n\n  const updateData = newData => {\n    data = newData;\n  };\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAQ6USPFRL3Uqps1aqErhcNyRlO2XblHj0\",\n    authDomain: \"interview-50399.firebaseapp.com\",\n    projectId: \"interview-50399\",\n    storageBucket: \"interview-50399.appspot.com\",\n    messagingSenderId: \"503019432099\",\n    appId: \"1:503019432099:web:9394f58478b734996db716\",\n    measurementId: \"G-C8XFN5VGFS\"\n  };\n\n  const getData = () => {\n    const db = getDatabase();\n    const starCountRef = ref(db, '/');\n    onValue(starCountRef, snapshot => {\n      const data = snapshot.val();\n      console.log(data);\n    });\n  };\n\n  getData();\n  let options = [];\n\n  for (let i = 0; i < data.length; i++) {\n    options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: data[i]['First'],\n      children: data[i]\n    }, data[i]['First'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      list: \"users\",\n      name: \"userSearch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"users\",\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = SearchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchView\");","map":{"version":3,"sources":["/Users/maxnorman/Documents/Coding/Interview/interview/src/search.js"],"names":["initializeApp","getAnalytics","getDatabase","ref","onValue","SearchView","props","app","firebaseConfig","data","updateData","newData","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getData","db","starCountRef","snapshot","val","console","log","options","i","length","push"],"mappings":";AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,QAAyC,mBAAzC;;AAGA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAEnC,QAAMC,GAAG,GAAGP,aAAa,CAACQ,cAAD,CAAzB;AAGA,MAAIC,IAAI,GAAG,IAAX;;AAEA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9BF,IAAAA,IAAI,GAAGE,OAAP;AACD,GAFD;;AAIA,QAAMH,cAAc,GAAG;AACrBI,IAAAA,MAAM,EAAE,yCADa;AAErBC,IAAAA,UAAU,EAAE,iCAFS;AAGrBC,IAAAA,SAAS,EAAE,iBAHU;AAIrBC,IAAAA,aAAa,EAAE,6BAJM;AAKrBC,IAAAA,iBAAiB,EAAE,cALE;AAMrBC,IAAAA,KAAK,EAAE,2CANc;AAOrBC,IAAAA,aAAa,EAAE;AAPM,GAAvB;;AAUA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,EAAE,GAAGlB,WAAW,EAAtB;AACA,UAAMmB,YAAY,GAAGlB,GAAG,CAACiB,EAAD,EAAK,GAAL,CAAxB;AACAhB,IAAAA,OAAO,CAACiB,YAAD,EAAgBC,QAAD,IAAc;AAClC,YAAMb,IAAI,GAAGa,QAAQ,CAACC,GAAT,EAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACD,KAHM,CAAP;AAID,GAPD;;AASAU,EAAAA,OAAO;AAEP,MAAIO,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,IAAI,CAACmB,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCD,IAAAA,OAAO,CAACG,IAAR,eAAa;AAA+B,MAAA,KAAK,EAAEpB,IAAI,CAACkB,CAAD,CAAJ,CAAQ,OAAR,CAAtC;AAAA,gBAAyDlB,IAAI,CAACkB,CAAD;AAA7D,OAAalB,IAAI,CAACkB,CAAD,CAAJ,CAAQ,OAAR,CAAb;AAAA;AAAA;AAAA;AAAA,YAAb;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9CM;KAAMrB,U","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, onValue} from \"firebase/database\";\n\n\nexport const SearchView = (props) => {\n\n  const app = initializeApp(firebaseConfig);\n\n\n  let data = null;\n\n  const updateData = (newData) => {\n    data = newData;\n  }\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAQ6USPFRL3Uqps1aqErhcNyRlO2XblHj0\",\n    authDomain: \"interview-50399.firebaseapp.com\",\n    projectId: \"interview-50399\",\n    storageBucket: \"interview-50399.appspot.com\",\n    messagingSenderId: \"503019432099\",\n    appId: \"1:503019432099:web:9394f58478b734996db716\",\n    measurementId: \"G-C8XFN5VGFS\"\n  };\n\n  const getData = () => {\n    const db = getDatabase();\n    const starCountRef = ref(db, '/');\n    onValue(starCountRef, (snapshot) => {\n      const data = snapshot.val();\n      console.log(data)\n    });\n  }\n\n  getData()\n\n  let options = []\n\n  for (let i = 0; i < data.length; i++){\n    options.push(<option key={data[i]['First']} value={data[i]['First']}>{data[i]}</option>)\n  }\n\n  return (\n    <div>\n      <input list=\"users\" name=\"userSearch\"/>\n      <datalist id=\"users\">\n        {options}\n      </datalist>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}